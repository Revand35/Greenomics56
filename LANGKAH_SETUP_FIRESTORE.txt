╔══════════════════════════════════════════════════════════════════════╗
║   📚 LANGKAH-LANGKAH SETUP FIRESTORE - GREENOMICS                    ║
║   Panduan Visual untuk Menyimpan Data Input ke Firebase              ║
╚══════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────┐
│ LANGKAH 1: BUKA FIREBASE CONSOLE                                     │
└──────────────────────────────────────────────────────────────────────┘

1. Buka browser (Chrome/Edge/Firefox)
2. Ketik URL: https://console.firebase.google.com/
3. Login dengan Google Account Anda
4. Anda akan melihat daftar project

✅ NEXT: Pilih project Greenomics


┌──────────────────────────────────────────────────────────────────────┐
│ LANGKAH 2: PILIH PROJECT GREENOMICS                                  │
└──────────────────────────────────────────────────────────────────────┘

1. Cari project dengan nama: "greenomics-7639d"
2. Klik pada card project tersebut
3. Anda akan masuk ke dashboard project

✅ NEXT: Enable Firestore Database


┌──────────────────────────────────────────────────────────────────────┐
│ LANGKAH 3: ENABLE FIRESTORE DATABASE                                 │
└──────────────────────────────────────────────────────────────────────┘

1. Di sidebar kiri, klik menu "Firestore Database"
   
   Jika SUDAH ADA database:
   ✅ Skip ke LANGKAH 4
   
   Jika BELUM ADA (muncul tombol "Create database"):
   
   2. Klik tombol "Create database"
   3. Pilih mode: "Start in production mode" (PENTING!)
   4. Klik "Next"
   5. Pilih location: "asia-southeast2 (Jakarta)"
      Atau pilih location terdekat dengan Anda
   6. Klik "Enable"
   7. Tunggu proses selesai (sekitar 30 detik)

✅ NEXT: Buat Collection


┌──────────────────────────────────────────────────────────────────────┐
│ LANGKAH 4: BUAT COLLECTION "environmental_activities"                │
└──────────────────────────────────────────────────────────────────────┘

1. Di halaman Firestore Database, klik "Start collection"
   (Atau klik tombol "+ Start collection" jika database kosong)

2. Dialog "Start a collection" akan muncul:
   
   ┌─────────────────────────────────────────────┐
   │ Collection ID                                │
   │ ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  │
   │ ┃ environmental_activities              ┃  │ <-- KETIK INI
   │ ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  │
   │                                              │
   │          [Cancel]          [Next]            │
   └─────────────────────────────────────────────┘

3. Klik "Next"

4. Tambah document dummy (akan dihapus nanti):
   
   Document ID: [Auto-ID]  <-- Biarkan kosong (auto-generate)
   
   Field:  test
   Type:   string
   Value:  test
   
5. Klik "Save"

✅ Collection berhasil dibuat!
✅ NEXT: Setup Security Rules


┌──────────────────────────────────────────────────────────────────────┐
│ LANGKAH 5: SETUP SECURITY RULES (PENTING!)                           │
└──────────────────────────────────────────────────────────────────────┘

1. Masih di halaman Firestore Database
2. Klik tab "Rules" (di bagian atas, sebelah Data)

   ┌──────────────────────────────────────┐
   │  [Data]  [Rules]  [Indexes]  [Usage] │
   │           ^^^^^^                      │
   │          KLIK INI                     │
   └──────────────────────────────────────┘

3. Anda akan melihat editor dengan isi default
4. HAPUS SEMUA isi yang ada (Ctrl+A, Delete)
5. COPY rules dari file: config/firestore.rules
   
   ATAU copy dari bawah ini:


┌──────────────────────────────────────────────────────────────────────┐
│ RULES YANG HARUS DI-PASTE:                                           │
└──────────────────────────────────────────────────────────────────────┘

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.email in [
               'admin@greenomics.com',
               'revandjethrosetiawan@gmail.com'
             ];
    }

    match /users/{userId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && 
                       (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    match /environmental_activities/{activityId} {
      allow read: if request.auth != null && 
                     (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if request.auth != null &&
                      request.resource.data.userId == request.auth.uid &&
                      request.resource.data.userEmail == request.auth.token.email;
      allow update: if request.auth != null && 
                       (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if request.auth != null && 
                       (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    match /userStats/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    
    match /chatHistory/{chatId} {
      allow create: if request.auth != null &&
                    request.resource.data.userId == request.auth.uid;
      allow read, delete: if request.auth != null &&
                          resource.data.userId == request.auth.uid;
    }
    
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null &&
        (request.auth.uid == resource.data.authorId || isAdmin());
    }
  }
}

┌──────────────────────────────────────────────────────────────────────┐
│ PASTE RULES DI ATAS KE EDITOR                                        │
└──────────────────────────────────────────────────────────────────────┘

6. Setelah paste, klik tombol "Publish" (kanan atas)
7. Tunggu hingga muncul notifikasi:
   ✅ "Rules published successfully"

✅ SECURITY RULES AKTIF!
✅ NEXT: Test dari aplikasi


┌──────────────────────────────────────────────────────────────────────┐
│ LANGKAH 6: TEST DARI APLIKASI GREENOMICS                             │
└──────────────────────────────────────────────────────────────────────┘

1. Buka aplikasi Greenomics di browser
   URL: http://127.0.0.1:8080

2. Klik "Masuk dengan Google" (jika belum login)

3. Login dengan Google Account

4. Setelah masuk ke Dashboard, klik "Input Data"
   (Di bottom navigation atau card "Input Data")

5. Anda akan melihat halaman "Input Data Green Accounting"

6. ISI FORM dengan data test:
   
   ┌────────────────────────────────────────┐
   │ Jenis Aktivitas:                       │
   │ [Pengelolaan Limbah]     ◄── PILIH     │
   ├────────────────────────────────────────┤
   │ Material/Sumber Daya:                  │
   │ [Plastik]                ◄── PILIH     │
   ├────────────────────────────────────────┤
   │ Jumlah:                                │
   │ [50]                     ◄── KETIK 50  │
   │ [kg]                     ◄── PILIH kg  │
   ├────────────────────────────────────────┤
   │ Aksi:                                  │
   │ [Daur Ulang]             ◄── PILIH     │
   ├────────────────────────────────────────┤
   │ Biaya (Opsional):                      │
   │ [               ]        ◄── KOSONGKAN │
   ├────────────────────────────────────────┤
   │ Catatan:                               │
   │ [Test input data]        ◄── KETIK     │
   └────────────────────────────────────────┘

7. Klik tombol "💰 Hitung Nilai Ekonomi"

8. Tunggu beberapa detik...

9. Jika BERHASIL, Anda akan melihat:
   
   ╔════════════════════════════════════════════╗
   ║ ✅ Aktivitas berhasil disimpan ke Firebase! ║
   ║ Nilai ekonomi: Rp 225,000                ║
   ║ Eco-Score: +8                            ║
   ║ 📝 Data tersimpan di cloud database       ║
   ╚════════════════════════════════════════════╝

10. Scroll ke bawah, Anda akan melihat data di "Aktivitas Terbaru"

✅ DATA BERHASIL TERSIMPAN!
✅ NEXT: Verifikasi di Firebase Console


┌──────────────────────────────────────────────────────────────────────┐
│ LANGKAH 7: VERIFIKASI DATA DI FIREBASE CONSOLE                       │
└──────────────────────────────────────────────────────────────────────┘

1. Kembali ke Firebase Console
   (Tab browser yang tadi dibuka)

2. Refresh halaman (F5)

3. Klik collection "environmental_activities"

4. Anda akan melihat DOCUMENT BARU dengan struktur:

   ┌────────────────────────────────────────────┐
   │ Document ID: abc123xyz (auto-generated)    │
   ├────────────────────────────────────────────┤
   │ Field              Type      Value         │
   ├────────────────────────────────────────────┤
   │ userId            string    abc123...      │
   │ userEmail         string    user@...       │
   │ userName          string    John Doe       │
   │ activityType      string    waste          │
   │ materialType      string    plastic        │
   │ amount            number    50             │
   │ unit              string    kg             │
   │ action            string    recycled       │
   │ notes             string    Test input...  │
   │ economicValue     number    225000         │
   │ ecoScore          number    8              │
   │ createdAt         timestamp ...            │
   │ updatedAt         timestamp ...            │
   │ timestamp         string    2025-01-...    │
   └────────────────────────────────────────────┘

✅ DATA TERSIMPAN DI FIREBASE!
✅ SETUP SELESAI!


┌──────────────────────────────────────────────────────────────────────┐
│ 🎉 SELAMAT! FIRESTORE SUDAH SIAP DIGUNAKAN                           │
└──────────────────────────────────────────────────────────────────────┘

Sekarang setiap kali Anda input data di halaman "Input Data":
✅ Data akan tersimpan ke Firebase Cloud
✅ Data tidak akan hilang meskipun clear browser
✅ Data bisa diakses dari berbagai perangkat
✅ Data aman dan terenkripsi
✅ Data tersinkronisasi real-time


┌──────────────────────────────────────────────────────────────────────┐
│ TROUBLESHOOTING                                                       │
└──────────────────────────────────────────────────────────────────────┘

❌ Error: "Missing or insufficient permissions"
   Solusi:
   - Pastikan rules sudah di-publish di Firebase Console
   - Refresh browser aplikasi
   - Pastikan sudah login

❌ Error: "User belum login"
   Solusi:
   - Klik "Masuk dengan Google" di aplikasi
   - Pastikan popup tidak diblok browser

❌ Data tidak muncul di Firebase Console
   Solusi:
   - Refresh halaman Firebase Console (F5)
   - Pastikan collection name: "environmental_activities"
   - Cek browser console (F12) untuk error

❌ Form submit tapi tidak ada notifikasi
   Solusi:
   - Buka browser console (F12)
   - Lihat tab "Console" untuk error message
   - Screenshot dan cek error


┌──────────────────────────────────────────────────────────────────────┐
│ CHECKLIST FINAL                                                       │
└──────────────────────────────────────────────────────────────────────┘

Setup Firebase:
□ Firebase Console dibuka
□ Project greenomics-7639d dipilih
□ Firestore Database enabled
□ Collection "environmental_activities" dibuat
□ Security rules di-publish
□ Rules berhasil tanpa error

Test Aplikasi:
□ Login dengan Google berhasil
□ Halaman Input Data terbuka
□ Form berhasil diisi
□ Submit berhasil (muncul notifikasi hijau)
□ Data muncul di "Aktivitas Terbaru"
□ Stats terupdate

Verifikasi Firebase:
□ Data terlihat di Firebase Console
□ Field lengkap (userId, email, amount, dll)
□ Timestamp tercatat

✅ Jika semua checked, SETUP BERHASIL 100%!


┌──────────────────────────────────────────────────────────────────────┐
│ BANTUAN LEBIH LANJUT                                                  │
└──────────────────────────────────────────────────────────────────────┘

Dokumentasi:
📄 FIREBASE_ENVIRONMENTAL_ACTIVITIES_GUIDE.md - Panduan lengkap API
📄 SETUP_FIRESTORE_MANUAL.md - Panduan setup detail
📄 FITUR_BARU_FIREBASE_INPUT_DATA.md - Ringkasan fitur

Test Page:
🧪 test-firebase-input.html - Test otomatis save/load/stats

Support:
📧 Admin: revandjethrosetiawan@gmail.com
🌐 Firebase Console: https://console.firebase.google.com/


╔══════════════════════════════════════════════════════════════════════╗
║                    🎉 HAPPY CODING! 🎉                                ║
║         Data Anda sekarang tersimpan aman di Firebase Cloud!         ║
╚══════════════════════════════════════════════════════════════════════╝

